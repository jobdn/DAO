/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DAO, DAOInterface } from "../../contracts/DAO";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "chairperson",
        type: "address",
      },
      {
        internalType: "address",
        name: "voteToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "minimumQuorum",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "debatingPeriodDuration",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "_chairperson",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_duration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_minimumQuorum",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_proposalCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_callData",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "string",
        name: "_descrition",
        type: "string",
      },
    ],
    name: "addProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "voteCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "description",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "bool",
        name: "started",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "voters",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastVotingTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101006040523480156200001257600080fd5b5060405162001fb338038062001fb38339818101604052810190620000389190620004b3565b6200006c7f0ac75e28a4b7c3ec0a1febc7bc8ce15f890efba561bfa4ac649ddeaa971c27ff60001b6200040b60201b60201c565b620000a07f3368d8b2a3ae3e74ef71843f108ac6e062869980fda1a5ff85ff973f6d8ccb9e60001b6200040b60201b60201c565b620000d47fe82d20fc4e54334016cf86d0b1ce1f355963150add002e54443e417397f610b060001b6200040b60201b60201c565b620001087fe8d0574b22c54e6af7fa1dfd68dadfee5ebbfb24c8cdc7e1fd7a2795752c7a6e60001b6200040b60201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614158015620001735750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b620001b5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001ac9062000586565b60405180910390fd5b620001e97f8c878692ad9f0bb26310b536f27e95a2a72fddcfd7b23a2e7b29176ff82c064660001b6200040b60201b60201c565b6200021d7ff1f794fdab4a1881802e0a1bcaa1e12cc89c751e7af2375bd6d29deea434e93160001b6200040b60201b60201c565b620002517f9da92e0dac2b03a15b82fd1c5b6f84a7c3c8f6c710314a9125b91a6a27a0623760001b6200040b60201b60201c565b8373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050620002b97ffac6191a738a32f38089b0001b31eb67fc8319d44838761871bedf4161385e9460001b6200040b60201b60201c565b620002ed7f9f2ad227a8b1b5fa3019313977a6cf4ecf2a8fbb848f494eea5ccd3d30dee3b460001b6200040b60201b60201c565b8273ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1681525050620003557fb1575adc44baad74cde8e197536b9c41ebda9dcf038d618c4b369732e8689dec60001b6200040b60201b60201c565b620003897fd85338563cad4e34fbfec68cb1b57c6b30ad096883b9414c0fc6c595751eadc560001b6200040b60201b60201c565b8160c08181525050620003c57f20e39034e0048df23db24bd9c9239d48b0b28ae8b01173b16f4e16d790698c4860001b6200040b60201b60201c565b620003f97fd59cfac7941b73cb25227043a244413a9cd4239d5f18fa5a8cff28516797b0ee60001b6200040b60201b60201c565b8060e0818152505050505050620005a8565b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620004408262000413565b9050919050565b620004528162000433565b81146200045e57600080fd5b50565b600081519050620004728162000447565b92915050565b6000819050919050565b6200048d8162000478565b81146200049957600080fd5b50565b600081519050620004ad8162000482565b92915050565b60008060008060808587031215620004d057620004cf6200040e565b5b6000620004e08782880162000461565b9450506020620004f38782880162000461565b935050604062000506878288016200049c565b925050606062000519878288016200049c565b91505092959194509250565b600082825260208201905092915050565b7f44414f3a206572726f72206f66206368616972706572736f6e7c746f6b656e00600082015250565b60006200056e601f8362000525565b91506200057b8262000536565b602082019050919050565b60006020820190508181036000830152620005a1816200055f565b9050919050565b60805160a05160c05160e0516119c3620005f060003960006102eb01526000610b040152600081816104c90152610ae00152600081816102c7015261086b01526119c36000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063b30e5ecd11610066578063b30e5ecd1461013c578063b6b55f251461015a578063dc07aeb214610176578063ecd0c0c314610192578063f75dc20d146101b057610093565b8063013cf08b14610098578063233c9e80146100ce578063245c7c60146100ec578063a3ec138d1461010a575b600080fd5b6100b260048036038101906100ad9190610f1c565b6101ce565b6040516100c59796959493929190611066565b60405180910390f35b6100d66102c5565b6040516100e391906110dc565b60405180910390f35b6100f46102e9565b60405161010191906110f7565b60405180910390f35b610124600480360381019061011f919061113e565b61030d565b6040516101339392919061116b565b60405180910390f35b610144610344565b60405161015191906110f7565b60405180910390f35b610174600480360381019061016f9190610f1c565b61034a565b005b610190600480360381019061018b9190611378565b6107b9565b005b61019a610ade565b6040516101a791906110dc565b60405180910390f35b6101b8610b02565b6040516101c591906110f7565b60405180910390f35b60026020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040160149054906101000a900460ff169080600501805461024290611432565b80601f016020809104026020016040519081016040528092919081815260200182805461026e90611432565b80156102bb5780601f10610290576101008083540402835291602001916102bb565b820191906000526020600020905b81548152906001019060200180831161029e57829003601f168201915b5050505050905087565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60016020528060005260406000206000915090508060000154908060010154908060020160009054906101000a900460ff16905083565b60005481565b6103757e45f2e1d41042003294ac40518c97046c3e599a5d16569f99319ff5301b57b260001b610b26565b6103a17f5cc7410420a538f1b4d2a888996182163e540b75d7f79a42de2bc8194751318860001b610b26565b6103cd7f011b6d707d96339f33af1cc95ec8359d44d7a6575da96051991ad9d53a3d079860001b610b26565b6103f97f3e356f75a190662263de2a2882434b026847f5bd18252df5baca0900ebab4bfd60001b610b26565b600081141561043d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610434906114c1565b60405180910390fd5b6104697f0c3ae67c3fa841fe2b1fc67d8cea000992cf767033e0398ed4664368eb741a3f60001b610b26565b6104957f29be73b4dec0e8b974e903ca7e726f82ab2b99038c741b6a5ac50a890ac3d71a60001b610b26565b6104c17fd5ccc5417bca1afd2d86c8c26ae205f42dc89cc5a6703f115152372967c5c41660001b610b26565b61050e3330837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610b29909392919063ffffffff16565b61053a7f4cd0349b47ec9f11d0c10502808ef5ee35889e85290a731ff0b1f16ca863a77660001b610b26565b6105667fd564a8e9ba2f4eabcaddbc97e4ae0c4999d095940d1f018d4df2284b185163c460001b610b26565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff166106d8576105e67f9f34bb9f5086d0dbee094920b3005a833e7206a3ef0338392ff28379260d5d6660001b610b26565b6106127f9e57e920cc48b4759a241b438210531da0fd938405d30e9555bcc33e105a83e060001b610b26565b61063e7f86cc4a4b001ea51505268c81d3edf45b2b472e63fce8f6dc27b613394675836c60001b610b26565b60405180606001604052808281526020016000815260200160011515815250600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548160ff0219169083151502179055509050506107b6565b6107047fbb8f23e0df2b8d6fc1b15a692dfa4db46cad99e4bb26009790d6c4abc62260e060001b610b26565b6107307fb640712ece7da35861237faf7e2798d6a5e7b2d42f06701823731817684c6fed60001b610b26565b61075c7f3f6f16d670e37c42f29cba21f872c408e40c443115892d66bd4b8b948a02ddb060001b610b26565b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546107ae9190611510565b925050819055505b50565b6107e57f178e8bbbbd78005f8a38eb9e7173e9de09cbf43520d6832f4687eb60b62b2ebd60001b610b26565b6108117fbeb8b65d3e7f3c8b443aa3fc51ece062cda5b8f765528bc200f7c8dfa2a9d07b60001b610b26565b61083d7fb1bada1fcafa873adc39d4f6a00b3c9c0c70a83d11f8434be56970242ce7a21360001b610b26565b6108697f1dd5bfb3ed89858cf2d83a65368a97ef37b6bd0dea8b05cab219bd385854d69260001b610b26565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ee906115b2565b60405180910390fd5b6109237f8cb76052d33968d1419f1e2b412133e33431e3b443505f8a72ddd7e11fc2a7be60001b610b26565b61094f7f754dcb4964103a43349006ddf06f2bf06612040cabd8b72b7f1a1781996f783960001b610b26565b600080815480929190610961906115d2565b91905055506109927f7d70ce84c5557bd72f06c83e422a30e6cd6b803e96ef0fbbcf3ff3d88ed6851b60001b610b26565b6109be7f0d190e0bbfb76101fd74617238650cfe1b704d10e7364da374bcc4cee604902c60001b610b26565b6040518060e00160405280600054815260200160008152602001428152602001826109e89061164d565b81526020018373ffffffffffffffffffffffffffffffffffffffff1681526020016001151581526020018481525060026000805481526020019081526020016000206000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160040160146101000a81548160ff02191690831515021790555060c0820151816005019080519060200190610ad5929190610e2f565b50905050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b50565b610bac846323b872dd60e01b858585604051602401610b4a939291906116b4565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610bb2565b50505050565b6000610c14826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610c799092919063ffffffff16565b9050600081511115610c745780806020019051810190610c349190611717565b610c73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6a906117b6565b60405180910390fd5b5b505050565b6060610c888484600085610c91565b90509392505050565b606082471015610cd6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ccd90611848565b60405180910390fd5b610cdf85610da5565b610d1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d15906118b4565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610d479190611910565b60006040518083038185875af1925050503d8060008114610d84576040519150601f19603f3d011682016040523d82523d6000602084013e610d89565b606091505b5091509150610d99828286610dc8565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315610dd857829050610e28565b600083511115610deb5782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1f919061196b565b60405180910390fd5b9392505050565b828054610e3b90611432565b90600052602060002090601f016020900481019282610e5d5760008555610ea4565b82601f10610e7657805160ff1916838001178555610ea4565b82800160010185558215610ea4579182015b82811115610ea3578251825591602001919060010190610e88565b5b509050610eb19190610eb5565b5090565b5b80821115610ece576000816000905550600101610eb6565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610ef981610ee6565b8114610f0457600080fd5b50565b600081359050610f1681610ef0565b92915050565b600060208284031215610f3257610f31610edc565b5b6000610f4084828501610f07565b91505092915050565b610f5281610ee6565b82525050565b6000819050919050565b610f6b81610f58565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f9c82610f71565b9050919050565b610fac81610f91565b82525050565b60008115159050919050565b610fc781610fb2565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611007578082015181840152602081019050610fec565b83811115611016576000848401525b50505050565b6000601f19601f8301169050919050565b600061103882610fcd565b6110428185610fd8565b9350611052818560208601610fe9565b61105b8161101c565b840191505092915050565b600060e08201905061107b600083018a610f49565b6110886020830189610f49565b6110956040830188610f49565b6110a26060830187610f62565b6110af6080830186610fa3565b6110bc60a0830185610fbe565b81810360c08301526110ce818461102d565b905098975050505050505050565b60006020820190506110f16000830184610fa3565b92915050565b600060208201905061110c6000830184610f49565b92915050565b61111b81610f91565b811461112657600080fd5b50565b60008135905061113881611112565b92915050565b60006020828403121561115457611153610edc565b5b600061116284828501611129565b91505092915050565b60006060820190506111806000830186610f49565b61118d6020830185610f49565b61119a6040830184610fbe565b949350505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6111e48261101c565b810181811067ffffffffffffffff82111715611203576112026111ac565b5b80604052505050565b6000611216610ed2565b905061122282826111db565b919050565b600067ffffffffffffffff821115611242576112416111ac565b5b61124b8261101c565b9050602081019050919050565b82818337600083830152505050565b600061127a61127584611227565b61120c565b905082815260208101848484011115611296576112956111a7565b5b6112a1848285611258565b509392505050565b600082601f8301126112be576112bd6111a2565b5b81356112ce848260208601611267565b91505092915050565b600067ffffffffffffffff8211156112f2576112f16111ac565b5b6112fb8261101c565b9050602081019050919050565b600061131b611316846112d7565b61120c565b905082815260208101848484011115611337576113366111a7565b5b611342848285611258565b509392505050565b600082601f83011261135f5761135e6111a2565b5b813561136f848260208601611308565b91505092915050565b60008060006060848603121561139157611390610edc565b5b600084013567ffffffffffffffff8111156113af576113ae610ee1565b5b6113bb868287016112a9565b93505060206113cc86828701611129565b925050604084013567ffffffffffffffff8111156113ed576113ec610ee1565b5b6113f98682870161134a565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061144a57607f821691505b6020821081141561145e5761145d611403565b5b50919050565b600082825260208201905092915050565b7f44414f3a207a65726f20616d6f756e7400000000000000000000000000000000600082015250565b60006114ab601083611464565b91506114b682611475565b602082019050919050565b600060208201905081810360008301526114da8161149e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061151b82610ee6565b915061152683610ee6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561155b5761155a6114e1565b5b828201905092915050565b7f44414f3a206e6f74206368616972706572736f6e000000000000000000000000600082015250565b600061159c601483611464565b91506115a782611566565b602082019050919050565b600060208201905081810360008301526115cb8161158f565b9050919050565b60006115dd82610ee6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156116105761160f6114e1565b5b600182019050919050565b6000819050602082019050919050565b60006116378251610f58565b80915050919050565b600082821b905092915050565b600061165882610fcd565b826116628461161b565b905061166d8161162b565b925060208210156116ad576116a87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83602003600802611640565b831692505b5050919050565b60006060820190506116c96000830186610fa3565b6116d66020830185610fa3565b6116e36040830184610f49565b949350505050565b6116f481610fb2565b81146116ff57600080fd5b50565b600081519050611711816116eb565b92915050565b60006020828403121561172d5761172c610edc565b5b600061173b84828501611702565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b60006117a0602a83611464565b91506117ab82611744565b604082019050919050565b600060208201905081810360008301526117cf81611793565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000611832602683611464565b915061183d826117d6565b604082019050919050565b6000602082019050818103600083015261186181611825565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b600061189e601d83611464565b91506118a982611868565b602082019050919050565b600060208201905081810360008301526118cd81611891565b9050919050565b600081905092915050565b60006118ea82610fcd565b6118f481856118d4565b9350611904818560208601610fe9565b80840191505092915050565b600061191c82846118df565b915081905092915050565b600081519050919050565b600061193d82611927565b6119478185611464565b9350611957818560208601610fe9565b6119608161101c565b840191505092915050565b600060208201905081810360008301526119858184611932565b90509291505056fea2646970667358221220ead182d014c7451edd65d7bb7e0f4028d696cf5176efec5ce36b62df23ff5a9364736f6c634300080b0033";

type DAOConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DAOConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DAO__factory extends ContractFactory {
  constructor(...args: DAOConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    chairperson: string,
    voteToken: string,
    minimumQuorum: BigNumberish,
    debatingPeriodDuration: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DAO> {
    return super.deploy(
      chairperson,
      voteToken,
      minimumQuorum,
      debatingPeriodDuration,
      overrides || {}
    ) as Promise<DAO>;
  }
  override getDeployTransaction(
    chairperson: string,
    voteToken: string,
    minimumQuorum: BigNumberish,
    debatingPeriodDuration: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      chairperson,
      voteToken,
      minimumQuorum,
      debatingPeriodDuration,
      overrides || {}
    );
  }
  override attach(address: string): DAO {
    return super.attach(address) as DAO;
  }
  override connect(signer: Signer): DAO__factory {
    return super.connect(signer) as DAO__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DAOInterface {
    return new utils.Interface(_abi) as DAOInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): DAO {
    return new Contract(address, _abi, signerOrProvider) as DAO;
  }
}
