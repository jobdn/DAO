/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DAO, DAOInterface } from "../../contracts/DAO";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "chairperson",
        type: "address",
      },
      {
        internalType: "address",
        name: "voteToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "minimumQuorum",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "debatingPeriodDuration",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NotSuccessVoting",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DepositMade",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "description",
        type: "bytes32",
      },
    ],
    name: "ProposalAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ProposalFinished",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "supportsAgainst",
        type: "bool",
      },
    ],
    name: "VotedForProposal",
    type: "event",
  },
  {
    inputs: [],
    name: "_chairperson",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_duration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_minimumQuorum",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_proposalCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_callData",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "string",
        name: "_descrition",
        type: "string",
      },
    ],
    name: "addProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "finishProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "creationTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "votesYes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "votesNo",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "description",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "enum DAO.ProposalStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_supportsAgainst",
        type: "bool",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "voters",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastVotingTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101006040523480156200001257600080fd5b506040516200293438038062002934833981810160405281019062000038919062000214565b6001600081905550600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614158015620000ab5750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b620000ed576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000e490620002e7565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508273ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508160c081815250508060e081815250505050505062000309565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001a18262000174565b9050919050565b620001b38162000194565b8114620001bf57600080fd5b50565b600081519050620001d381620001a8565b92915050565b6000819050919050565b620001ee81620001d9565b8114620001fa57600080fd5b50565b6000815190506200020e81620001e3565b92915050565b600080600080608085870312156200023157620002306200016f565b5b60006200024187828801620001c2565b94505060206200025487828801620001c2565b93505060406200026787828801620001fd565b92505060606200027a87828801620001fd565b91505092959194509250565b600082825260208201905092915050565b7f44414f3a206572726f72206f66206368616972706572736f6e7c746f6b656e00600082015250565b6000620002cf601f8362000286565b9150620002dc8262000297565b602082019050919050565b600060208201905081810360008301526200030281620002c0565b9050919050565b60805160a05160c05160e0516125c0620003746000396000818161035501528181610403015281816107300152610baa01526000818161048701526111d20152600081816108270152818161096301526111ae0152600081816103310152610f4401526125c06000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063b30e5ecd11610071578063b30e5ecd14610184578063b6b55f25146101a2578063c9d27afe146101be578063dc07aeb2146101da578063ecd0c0c3146101f6578063f75dc20d14610214576100b4565b8063013cf08b146100b9578063233c9e80146100f0578063245c7c601461010e578063273932781461012c5780638d8f2adb14610148578063a3ec138d14610152575b600080fd5b6100d360048036038101906100ce919061166d565b610232565b6040516100e7989796959493929190611813565b60405180910390f35b6100f861032f565b6040516101059190611898565b60405180910390f35b610116610353565b60405161012391906118b3565b60405180910390f35b6101466004803603810190610141919061166d565b610377565b005b6101506106e0565b005b61016c600480360381019061016791906118fa565b6108d0565b60405161017b93929190611942565b60405180910390f35b61018c610907565b60405161019991906118b3565b60405180910390f35b6101bc60048036038101906101b7919061166d565b61090d565b005b6101d860048036038101906101d391906119a5565b610b1e565b005b6101f460048036038101906101ef9190611bbb565b610f42565b005b6101fe6111ac565b60405161020b9190611898565b60405180910390f35b61021c6111d0565b60405161022991906118b3565b60405180910390f35b60036020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040154908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050160149054906101000a900460ff16908060060180546102ac90611c75565b80601f01602080910402602001604051908101604052809291908181526020018280546102d890611c75565b80156103255780601f106102fa57610100808354040283529160200191610325565b820191906000526020600020905b81548152906001019060200180831161030857829003601f168201915b5050505050905088565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b8060018081111561038b5761038a611703565b5b6003600083815260200190815260200160002060050160149054906101000a900460ff1660018111156103c1576103c0611703565b5b14610401576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f890611d04565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000060036000848152602001908152602001600020600101546104439190611d53565b421015610485576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047c90611df5565b60405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000600360008481526020019081526020016000206003015460036000858152602001908152602001600020600201546104de9190611d53565b118015610516575060036000838152602001908152602001600020600301546003600084815260200190815260200160002060020154115b156106585760006003600084815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166003600085815260200190815260200160002060060160405161058d9190611eb4565b6000604051808303816000865af19150503d80600081146105ca576040519150601f19603f3d011682016040523d82523d6000602084013e6105cf565b606091505b5050905080610613576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060a90611f17565b60405180910390fd5b60006003600085815260200190815260200160002060050160146101000a81548160ff0219169083600181111561064d5761064c611703565b5b021790555050610698565b60006003600084815260200190815260200160002060050160146101000a81548160ff0219169083600181111561069257610691611703565b5b02179055505b813373ffffffffffffffffffffffffffffffffffffffff167f2302953e050ab925ecf6df327b4c8cabccd9179f339cc4809d0798716735b0d060405160405180910390a35050565b60026000541415610726576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071d90611f83565b60405180910390fd5b60026000819055507f0000000000000000000000000000000000000000000000000000000000000000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015461079c9190611d53565b4210156107de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d590612015565b60405180910390fd5b61086b33600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001547f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166111f49092919063ffffffff16565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff0219169083151502179055506001600081905550565b60026020528060005260406000206000915090508060000154908060010154908060020160009054906101000a900460ff16905083565b60015481565b60026000541415610953576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094a90611f83565b60405180910390fd5b60026000819055506109a83330837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661127a909392919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16610a6b576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905081816000018190555060018160020160006101000a81548160ff02191690831515021790555050610ac5565b80600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254610abd9190611d53565b925050819055505b3373ffffffffffffffffffffffffffffffffffffffff167fd15c9547ea5c06670c0010ce19bc32d54682a4b3801ece7f3ab0c3f17106b4bb82604051610b0b91906118b3565b60405180910390a2600160008190555050565b81600180811115610b3257610b31611703565b5b6003600083815260200190815260200160002060050160149054906101000a900460ff166001811115610b6857610b67611703565b5b14610ba8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9f90611d04565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006003600085815260200190815260200160002060010154610bea9190611d53565b4210610c2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2290612081565b60405180910390fd5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16610cba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb1906120ed565b60405180910390fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600085815260200190815260200160002054600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154610d5d919061210d565b90508215610d975780600360008681526020019081526020016000206002016000828254610d8b9190611d53565b92505081905550610dc5565b80600360008681526020019081526020016000206003016000828254610dbd9190611d53565b925050819055505b80600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160008681526020019081526020016000206000828254610e289190611d53565b92505081905550600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015460036000868152602001908152602001600020600101541115610eed576003600085815260200190815260200160002060010154600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055505b833373ffffffffffffffffffffffffffffffffffffffff167f995ff76220bfcb3ba84b093932f234d475d04e11c6d7a7b535a43b5945753f8e85604051610f349190612141565b60405180910390a350505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610fd0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc7906121a8565b60405180910390fd5b6040518061010001604052806001548152602001428152602001600081526020016000815260200182611002906121fa565b81526020018373ffffffffffffffffffffffffffffffffffffffff16815260200160018081111561103657611035611703565b5b815260200184815250600360006001548152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c08201518160050160146101000a81548160ff021916908360018111156110f8576110f7611703565b5b021790555060e0820151816006019080519060200190611119929190611580565b509050506001600081548092919061113090612261565b9190505550600360006001548152602001908152602001600020600401548360405161115c91906122db565b60405180910390208373ffffffffffffffffffffffffffffffffffffffff167f7a187d6a168e06d4cd231406f04b7e2f7b39d1d670b51df8b2839349b69fc7fa60405160405180910390a4505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6112758363a9059cbb60e01b84846040516024016112139291906122f2565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611303565b505050565b6112fd846323b872dd60e01b85858560405160240161129b9392919061231b565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611303565b50505050565b6000611365826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166113ca9092919063ffffffff16565b90506000815111156113c557808060200190518101906113859190612367565b6113c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113bb90612406565b60405180910390fd5b5b505050565b60606113d984846000856113e2565b90509392505050565b606082471015611427576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141e90612498565b60405180910390fd5b611430856114f6565b61146f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161146690612504565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161149891906122db565b60006040518083038185875af1925050503d80600081146114d5576040519150601f19603f3d011682016040523d82523d6000602084013e6114da565b606091505b50915091506114ea828286611519565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6060831561152957829050611579565b60008351111561153c5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115709190612568565b60405180910390fd5b9392505050565b82805461158c90611c75565b90600052602060002090601f0160209004810192826115ae57600085556115f5565b82601f106115c757805160ff19168380011785556115f5565b828001600101855582156115f5579182015b828111156115f45782518255916020019190600101906115d9565b5b5090506116029190611606565b5090565b5b8082111561161f576000816000905550600101611607565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61164a81611637565b811461165557600080fd5b50565b60008135905061166781611641565b92915050565b6000602082840312156116835761168261162d565b5b600061169184828501611658565b91505092915050565b6116a381611637565b82525050565b6000819050919050565b6116bc816116a9565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006116ed826116c2565b9050919050565b6116fd816116e2565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811061174357611742611703565b5b50565b600081905061175482611732565b919050565b600061176482611746565b9050919050565b61177481611759565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156117b4578082015181840152602081019050611799565b838111156117c3576000848401525b50505050565b6000601f19601f8301169050919050565b60006117e58261177a565b6117ef8185611785565b93506117ff818560208601611796565b611808816117c9565b840191505092915050565b600061010082019050611829600083018b61169a565b611836602083018a61169a565b611843604083018961169a565b611850606083018861169a565b61185d60808301876116b3565b61186a60a08301866116f4565b61187760c083018561176b565b81810360e083015261188981846117da565b90509998505050505050505050565b60006020820190506118ad60008301846116f4565b92915050565b60006020820190506118c8600083018461169a565b92915050565b6118d7816116e2565b81146118e257600080fd5b50565b6000813590506118f4816118ce565b92915050565b6000602082840312156119105761190f61162d565b5b600061191e848285016118e5565b91505092915050565b60008115159050919050565b61193c81611927565b82525050565b6000606082019050611957600083018661169a565b611964602083018561169a565b6119716040830184611933565b949350505050565b61198281611927565b811461198d57600080fd5b50565b60008135905061199f81611979565b92915050565b600080604083850312156119bc576119bb61162d565b5b60006119ca85828601611658565b92505060206119db85828601611990565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611a27826117c9565b810181811067ffffffffffffffff82111715611a4657611a456119ef565b5b80604052505050565b6000611a59611623565b9050611a658282611a1e565b919050565b600067ffffffffffffffff821115611a8557611a846119ef565b5b611a8e826117c9565b9050602081019050919050565b82818337600083830152505050565b6000611abd611ab884611a6a565b611a4f565b905082815260208101848484011115611ad957611ad86119ea565b5b611ae4848285611a9b565b509392505050565b600082601f830112611b0157611b006119e5565b5b8135611b11848260208601611aaa565b91505092915050565b600067ffffffffffffffff821115611b3557611b346119ef565b5b611b3e826117c9565b9050602081019050919050565b6000611b5e611b5984611b1a565b611a4f565b905082815260208101848484011115611b7a57611b796119ea565b5b611b85848285611a9b565b509392505050565b600082601f830112611ba257611ba16119e5565b5b8135611bb2848260208601611b4b565b91505092915050565b600080600060608486031215611bd457611bd361162d565b5b600084013567ffffffffffffffff811115611bf257611bf1611632565b5b611bfe86828701611aec565b9350506020611c0f868287016118e5565b925050604084013567ffffffffffffffff811115611c3057611c2f611632565b5b611c3c86828701611b8d565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611c8d57607f821691505b60208210811415611ca157611ca0611c46565b5b50919050565b600082825260208201905092915050565b7f44414f3a206e6f74206578697374656e742070726f706f73616c000000000000600082015250565b6000611cee601a83611ca7565b9150611cf982611cb8565b602082019050919050565b60006020820190508181036000830152611d1d81611ce1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611d5e82611637565b9150611d6983611637565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611d9e57611d9d611d24565b5b828201905092915050565b7f44414f3a20706572696f64206f6620766f74696e672069736e2774206f766572600082015250565b6000611ddf602083611ca7565b9150611dea82611da9565b602082019050919050565b60006020820190508181036000830152611e0e81611dd2565b9050919050565b600081905092915050565b60008190508160005260206000209050919050565b60008154611e4281611c75565b611e4c8186611e15565b94506001821660008114611e675760018114611e7857611eab565b60ff19831686528186019350611eab565b611e8185611e20565b60005b83811015611ea357815481890152600182019150602081019050611e84565b838801955050505b50505092915050565b6000611ec08284611e35565b915081905092915050565b7f44414f3a2063616c6c206661696c730000000000000000000000000000000000600082015250565b6000611f01600f83611ca7565b9150611f0c82611ecb565b602082019050919050565b60006020820190508181036000830152611f3081611ef4565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000611f6d601f83611ca7565b9150611f7882611f37565b602082019050919050565b60006020820190508181036000830152611f9c81611f60565b9050919050565b7f44414f3a206c61737420766f74696e6720706572696f642069736e2774206f7660008201527f6572000000000000000000000000000000000000000000000000000000000000602082015250565b6000611fff602283611ca7565b915061200a82611fa3565b604082019050919050565b6000602082019050818103600083015261202e81611ff2565b9050919050565b7f44414f3a20706572696f64206f6620766f74696e67206973206f766572000000600082015250565b600061206b601d83611ca7565b915061207682612035565b602082019050919050565b6000602082019050818103600083015261209a8161205e565b9050919050565b7f44414f3a20796f752063616e6e6f7420766f7465000000000000000000000000600082015250565b60006120d7601483611ca7565b91506120e2826120a1565b602082019050919050565b60006020820190508181036000830152612106816120ca565b9050919050565b600061211882611637565b915061212383611637565b92508282101561213657612135611d24565b5b828203905092915050565b60006020820190506121566000830184611933565b92915050565b7f44414f3a206e6f74206368616972706572736f6e000000000000000000000000600082015250565b6000612192601483611ca7565b915061219d8261215c565b602082019050919050565b600060208201905081810360008301526121c181612185565b9050919050565b6000819050602082019050919050565b60006121e482516116a9565b80915050919050565b600082821b905092915050565b60006122058261177a565b8261220f846121c8565b905061221a816121d8565b9250602082101561225a576122557fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff836020036008026121ed565b831692505b5050919050565b600061226c82611637565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561229f5761229e611d24565b5b600182019050919050565b60006122b58261177a565b6122bf8185611e15565b93506122cf818560208601611796565b80840191505092915050565b60006122e782846122aa565b915081905092915050565b600060408201905061230760008301856116f4565b612314602083018461169a565b9392505050565b600060608201905061233060008301866116f4565b61233d60208301856116f4565b61234a604083018461169a565b949350505050565b60008151905061236181611979565b92915050565b60006020828403121561237d5761237c61162d565b5b600061238b84828501612352565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b60006123f0602a83611ca7565b91506123fb82612394565b604082019050919050565b6000602082019050818103600083015261241f816123e3565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000612482602683611ca7565b915061248d82612426565b604082019050919050565b600060208201905081810360008301526124b181612475565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006124ee601d83611ca7565b91506124f9826124b8565b602082019050919050565b6000602082019050818103600083015261251d816124e1565b9050919050565b600081519050919050565b600061253a82612524565b6125448185611ca7565b9350612554818560208601611796565b61255d816117c9565b840191505092915050565b60006020820190508181036000830152612582818461252f565b90509291505056fea26469706673582212200be97d14c8264701fa7b454b6bdfc2fc9c23b30c7ae73e8be389aae9c169a26364736f6c634300080b0033";

type DAOConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DAOConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DAO__factory extends ContractFactory {
  constructor(...args: DAOConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    chairperson: string,
    voteToken: string,
    minimumQuorum: BigNumberish,
    debatingPeriodDuration: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DAO> {
    return super.deploy(
      chairperson,
      voteToken,
      minimumQuorum,
      debatingPeriodDuration,
      overrides || {}
    ) as Promise<DAO>;
  }
  override getDeployTransaction(
    chairperson: string,
    voteToken: string,
    minimumQuorum: BigNumberish,
    debatingPeriodDuration: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      chairperson,
      voteToken,
      minimumQuorum,
      debatingPeriodDuration,
      overrides || {}
    );
  }
  override attach(address: string): DAO {
    return super.attach(address) as DAO;
  }
  override connect(signer: Signer): DAO__factory {
    return super.connect(signer) as DAO__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DAOInterface {
    return new utils.Interface(_abi) as DAOInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): DAO {
    return new Contract(address, _abi, signerOrProvider) as DAO;
  }
}
