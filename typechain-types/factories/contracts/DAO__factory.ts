/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DAO, DAOInterface } from "../../contracts/DAO";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "chairperson",
        type: "address",
      },
      {
        internalType: "address",
        name: "voteToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "minimumQuorum",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "debatingPeriodDuration",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NotSuccessVoting",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DepositMade",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "description",
        type: "bytes32",
      },
    ],
    name: "ProposalAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ProposalFinished",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "supportsAgainst",
        type: "bool",
      },
    ],
    name: "VotedForProposal",
    type: "event",
  },
  {
    inputs: [],
    name: "_chairperson",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_duration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_minimumQuorum",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_proposalCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_callData",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "string",
        name: "_descrition",
        type: "string",
      },
    ],
    name: "addProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "finishProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "creationTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "votesYes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "votesNo",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "description",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "enum DAO.ProposalStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_supportsAgainst",
        type: "bool",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "voters",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastVotingTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101006040523480156200001257600080fd5b50604051620028cf380380620028cf833981810160405281019062000038919062000214565b6001600081905550600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614158015620000ab5750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b620000ed576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000e490620002e7565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508273ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508160c081815250508060e081815250505050505062000309565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001a18262000174565b9050919050565b620001b38162000194565b8114620001bf57600080fd5b50565b600081519050620001d381620001a8565b92915050565b6000819050919050565b620001ee81620001d9565b8114620001fa57600080fd5b50565b6000815190506200020e81620001e3565b92915050565b600080600080608085870312156200023157620002306200016f565b5b60006200024187828801620001c2565b94505060206200025487828801620001c2565b93505060406200026787828801620001fd565b92505060606200027a87828801620001fd565b91505092959194509250565b600082825260208201905092915050565b7f44414f3a206572726f72206f66206368616972706572736f6e7c746f6b656e00600082015250565b6000620002cf601f8362000286565b9150620002dc8262000297565b602082019050919050565b600060208201905081810360008301526200030281620002c0565b9050919050565b60805160a05160c05160e05161255b6200037460003960008181610354015281816104020152818161072f0152610b5d015260008181610486015261117b0152600081816108260152818161093c01526111570152600081816103300152610eed015261255b6000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063b30e5ecd11610071578063b30e5ecd14610183578063b6b55f25146101a1578063c9d27afe146101bd578063dc07aeb2146101d9578063ecd0c0c3146101f5578063f75dc20d14610213576100b4565b8063013cf08b146100b9578063233c9e80146100f0578063245c7c601461010e578063273932781461012c5780638d8f2adb14610148578063a3ec138d14610152575b600080fd5b6100d360048036038101906100ce9190611616565b610231565b6040516100e79897969594939291906117bc565b60405180910390f35b6100f861032e565b6040516101059190611841565b60405180910390f35b610116610352565b604051610123919061185c565b60405180910390f35b61014660048036038101906101419190611616565b610376565b005b6101506106df565b005b61016c600480360381019061016791906118a3565b6108bc565b60405161017a9291906118d0565b60405180910390f35b61018b6108e0565b604051610198919061185c565b60405180910390f35b6101bb60048036038101906101b69190611616565b6108e6565b005b6101d760048036038101906101d29190611931565b610ad1565b005b6101f360048036038101906101ee9190611b47565b610eeb565b005b6101fd611155565b60405161020a9190611841565b60405180910390f35b61021b611179565b604051610228919061185c565b60405180910390f35b60036020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040154908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050160149054906101000a900460ff16908060060180546102ab90611c01565b80601f01602080910402602001604051908101604052809291908181526020018280546102d790611c01565b80156103245780601f106102f957610100808354040283529160200191610324565b820191906000526020600020905b81548152906001019060200180831161030757829003601f168201915b5050505050905088565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b8060018081111561038a576103896116ac565b5b6003600083815260200190815260200160002060050160149054906101000a900460ff1660018111156103c0576103bf6116ac565b5b14610400576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f790611c90565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000060036000848152602001908152602001600020600101546104429190611cdf565b421015610484576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047b90611d81565b60405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000600360008481526020019081526020016000206003015460036000858152602001908152602001600020600201546104dd9190611cdf565b118015610515575060036000838152602001908152602001600020600301546003600084815260200190815260200160002060020154115b156106575760006003600084815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166003600085815260200190815260200160002060060160405161058c9190611e40565b6000604051808303816000865af19150503d80600081146105c9576040519150601f19603f3d011682016040523d82523d6000602084013e6105ce565b606091505b5050905080610612576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060990611ea3565b60405180910390fd5b60006003600085815260200190815260200160002060050160146101000a81548160ff0219169083600181111561064c5761064b6116ac565b5b021790555050610697565b60006003600084815260200190815260200160002060050160146101000a81548160ff02191690836001811115610691576106906116ac565b5b02179055505b813373ffffffffffffffffffffffffffffffffffffffff167f2302953e050ab925ecf6df327b4c8cabccd9179f339cc4809d0798716735b0d060405160405180910390a35050565b60026000541415610725576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071c90611f0f565b60405180910390fd5b60026000819055507f0000000000000000000000000000000000000000000000000000000000000000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015461079b9190611cdf565b4210156107dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d490611fa1565b60405180910390fd5b61086a33600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001547f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661119d9092919063ffffffff16565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506001600081905550565b60026020528060005260406000206000915090508060000154908060010154905082565b60015481565b6002600054141561092c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092390611f0f565b60405180910390fd5b60026000819055506109813330837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611223909392919063ffffffff16565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541415610a1e576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905081816000018190555050610a78565b80600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254610a709190611cdf565b925050819055505b3373ffffffffffffffffffffffffffffffffffffffff167fd15c9547ea5c06670c0010ce19bc32d54682a4b3801ece7f3ab0c3f17106b4bb82604051610abe919061185c565b60405180910390a2600160008190555050565b81600180811115610ae557610ae46116ac565b5b6003600083815260200190815260200160002060050160149054906101000a900460ff166001811115610b1b57610b1a6116ac565b5b14610b5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5290611c90565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006003600085815260200190815260200160002060010154610b9d9190611cdf565b4210610bde576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd59061200d565b60405180910390fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015411610c63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5a90612079565b60405180910390fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201600085815260200190815260200160002054600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154610d069190612099565b90508215610d405780600360008681526020019081526020016000206002016000828254610d349190611cdf565b92505081905550610d6e565b80600360008681526020019081526020016000206003016000828254610d669190611cdf565b925050819055505b80600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160008681526020019081526020016000206000828254610dd19190611cdf565b92505081905550600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015460036000868152602001908152602001600020600101541115610e96576003600085815260200190815260200160002060010154600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055505b833373ffffffffffffffffffffffffffffffffffffffff167f995ff76220bfcb3ba84b093932f234d475d04e11c6d7a7b535a43b5945753f8e85604051610edd91906120dc565b60405180910390a350505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7090612143565b60405180910390fd5b6040518061010001604052806001548152602001428152602001600081526020016000815260200182610fab90612195565b81526020018373ffffffffffffffffffffffffffffffffffffffff168152602001600180811115610fdf57610fde6116ac565b5b815260200184815250600360006001548152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c08201518160050160146101000a81548160ff021916908360018111156110a1576110a06116ac565b5b021790555060e08201518160060190805190602001906110c2929190611529565b50905050600160008154809291906110d9906121fc565b919050555060036000600154815260200190815260200160002060040154836040516111059190612276565b60405180910390208373ffffffffffffffffffffffffffffffffffffffff167f7a187d6a168e06d4cd231406f04b7e2f7b39d1d670b51df8b2839349b69fc7fa60405160405180910390a4505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b61121e8363a9059cbb60e01b84846040516024016111bc92919061228d565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506112ac565b505050565b6112a6846323b872dd60e01b858585604051602401611244939291906122b6565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506112ac565b50505050565b600061130e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166113739092919063ffffffff16565b905060008151111561136e578080602001905181019061132e9190612302565b61136d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611364906123a1565b60405180910390fd5b5b505050565b6060611382848460008561138b565b90509392505050565b6060824710156113d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113c790612433565b60405180910390fd5b6113d98561149f565b611418576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140f9061249f565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516114419190612276565b60006040518083038185875af1925050503d806000811461147e576040519150601f19603f3d011682016040523d82523d6000602084013e611483565b606091505b50915091506114938282866114c2565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b606083156114d257829050611522565b6000835111156114e55782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115199190612503565b60405180910390fd5b9392505050565b82805461153590611c01565b90600052602060002090601f016020900481019282611557576000855561159e565b82601f1061157057805160ff191683800117855561159e565b8280016001018555821561159e579182015b8281111561159d578251825591602001919060010190611582565b5b5090506115ab91906115af565b5090565b5b808211156115c85760008160009055506001016115b0565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6115f3816115e0565b81146115fe57600080fd5b50565b600081359050611610816115ea565b92915050565b60006020828403121561162c5761162b6115d6565b5b600061163a84828501611601565b91505092915050565b61164c816115e0565b82525050565b6000819050919050565b61166581611652565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006116968261166b565b9050919050565b6116a68161168b565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600281106116ec576116eb6116ac565b5b50565b60008190506116fd826116db565b919050565b600061170d826116ef565b9050919050565b61171d81611702565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561175d578082015181840152602081019050611742565b8381111561176c576000848401525b50505050565b6000601f19601f8301169050919050565b600061178e82611723565b611798818561172e565b93506117a881856020860161173f565b6117b181611772565b840191505092915050565b6000610100820190506117d2600083018b611643565b6117df602083018a611643565b6117ec6040830189611643565b6117f96060830188611643565b611806608083018761165c565b61181360a083018661169d565b61182060c0830185611714565b81810360e08301526118328184611783565b90509998505050505050505050565b6000602082019050611856600083018461169d565b92915050565b60006020820190506118716000830184611643565b92915050565b6118808161168b565b811461188b57600080fd5b50565b60008135905061189d81611877565b92915050565b6000602082840312156118b9576118b86115d6565b5b60006118c78482850161188e565b91505092915050565b60006040820190506118e56000830185611643565b6118f26020830184611643565b9392505050565b60008115159050919050565b61190e816118f9565b811461191957600080fd5b50565b60008135905061192b81611905565b92915050565b60008060408385031215611948576119476115d6565b5b600061195685828601611601565b92505060206119678582860161191c565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6119b382611772565b810181811067ffffffffffffffff821117156119d2576119d161197b565b5b80604052505050565b60006119e56115cc565b90506119f182826119aa565b919050565b600067ffffffffffffffff821115611a1157611a1061197b565b5b611a1a82611772565b9050602081019050919050565b82818337600083830152505050565b6000611a49611a44846119f6565b6119db565b905082815260208101848484011115611a6557611a64611976565b5b611a70848285611a27565b509392505050565b600082601f830112611a8d57611a8c611971565b5b8135611a9d848260208601611a36565b91505092915050565b600067ffffffffffffffff821115611ac157611ac061197b565b5b611aca82611772565b9050602081019050919050565b6000611aea611ae584611aa6565b6119db565b905082815260208101848484011115611b0657611b05611976565b5b611b11848285611a27565b509392505050565b600082601f830112611b2e57611b2d611971565b5b8135611b3e848260208601611ad7565b91505092915050565b600080600060608486031215611b6057611b5f6115d6565b5b600084013567ffffffffffffffff811115611b7e57611b7d6115db565b5b611b8a86828701611a78565b9350506020611b9b8682870161188e565b925050604084013567ffffffffffffffff811115611bbc57611bbb6115db565b5b611bc886828701611b19565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611c1957607f821691505b60208210811415611c2d57611c2c611bd2565b5b50919050565b600082825260208201905092915050565b7f44414f3a206e6f74206578697374656e742070726f706f73616c000000000000600082015250565b6000611c7a601a83611c33565b9150611c8582611c44565b602082019050919050565b60006020820190508181036000830152611ca981611c6d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611cea826115e0565b9150611cf5836115e0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611d2a57611d29611cb0565b5b828201905092915050565b7f44414f3a20706572696f64206f6620766f74696e672069736e2774206f766572600082015250565b6000611d6b602083611c33565b9150611d7682611d35565b602082019050919050565b60006020820190508181036000830152611d9a81611d5e565b9050919050565b600081905092915050565b60008190508160005260206000209050919050565b60008154611dce81611c01565b611dd88186611da1565b94506001821660008114611df35760018114611e0457611e37565b60ff19831686528186019350611e37565b611e0d85611dac565b60005b83811015611e2f57815481890152600182019150602081019050611e10565b838801955050505b50505092915050565b6000611e4c8284611dc1565b915081905092915050565b7f44414f3a2063616c6c206661696c730000000000000000000000000000000000600082015250565b6000611e8d600f83611c33565b9150611e9882611e57565b602082019050919050565b60006020820190508181036000830152611ebc81611e80565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000611ef9601f83611c33565b9150611f0482611ec3565b602082019050919050565b60006020820190508181036000830152611f2881611eec565b9050919050565b7f44414f3a206c61737420766f74696e6720706572696f642069736e2774206f7660008201527f6572000000000000000000000000000000000000000000000000000000000000602082015250565b6000611f8b602283611c33565b9150611f9682611f2f565b604082019050919050565b60006020820190508181036000830152611fba81611f7e565b9050919050565b7f44414f3a20706572696f64206f6620766f74696e67206973206f766572000000600082015250565b6000611ff7601d83611c33565b915061200282611fc1565b602082019050919050565b6000602082019050818103600083015261202681611fea565b9050919050565b7f44414f3a20796f752063616e6e6f7420766f7465000000000000000000000000600082015250565b6000612063601483611c33565b915061206e8261202d565b602082019050919050565b6000602082019050818103600083015261209281612056565b9050919050565b60006120a4826115e0565b91506120af836115e0565b9250828210156120c2576120c1611cb0565b5b828203905092915050565b6120d6816118f9565b82525050565b60006020820190506120f160008301846120cd565b92915050565b7f44414f3a206e6f74206368616972706572736f6e000000000000000000000000600082015250565b600061212d601483611c33565b9150612138826120f7565b602082019050919050565b6000602082019050818103600083015261215c81612120565b9050919050565b6000819050602082019050919050565b600061217f8251611652565b80915050919050565b600082821b905092915050565b60006121a082611723565b826121aa84612163565b90506121b581612173565b925060208210156121f5576121f07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83602003600802612188565b831692505b5050919050565b6000612207826115e0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561223a57612239611cb0565b5b600182019050919050565b600061225082611723565b61225a8185611da1565b935061226a81856020860161173f565b80840191505092915050565b60006122828284612245565b915081905092915050565b60006040820190506122a2600083018561169d565b6122af6020830184611643565b9392505050565b60006060820190506122cb600083018661169d565b6122d8602083018561169d565b6122e56040830184611643565b949350505050565b6000815190506122fc81611905565b92915050565b600060208284031215612318576123176115d6565b5b6000612326848285016122ed565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b600061238b602a83611c33565b91506123968261232f565b604082019050919050565b600060208201905081810360008301526123ba8161237e565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b600061241d602683611c33565b9150612428826123c1565b604082019050919050565b6000602082019050818103600083015261244c81612410565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000612489601d83611c33565b915061249482612453565b602082019050919050565b600060208201905081810360008301526124b88161247c565b9050919050565b600081519050919050565b60006124d5826124bf565b6124df8185611c33565b93506124ef81856020860161173f565b6124f881611772565b840191505092915050565b6000602082019050818103600083015261251d81846124ca565b90509291505056fea264697066735822122058ef222dc03e0c68266a7ea296ba210c4c109c6536a6e6f1a23c59409236eeca64736f6c634300080b0033";

type DAOConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DAOConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DAO__factory extends ContractFactory {
  constructor(...args: DAOConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    chairperson: string,
    voteToken: string,
    minimumQuorum: BigNumberish,
    debatingPeriodDuration: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DAO> {
    return super.deploy(
      chairperson,
      voteToken,
      minimumQuorum,
      debatingPeriodDuration,
      overrides || {}
    ) as Promise<DAO>;
  }
  override getDeployTransaction(
    chairperson: string,
    voteToken: string,
    minimumQuorum: BigNumberish,
    debatingPeriodDuration: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      chairperson,
      voteToken,
      minimumQuorum,
      debatingPeriodDuration,
      overrides || {}
    );
  }
  override attach(address: string): DAO {
    return super.attach(address) as DAO;
  }
  override connect(signer: Signer): DAO__factory {
    return super.connect(signer) as DAO__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DAOInterface {
    return new utils.Interface(_abi) as DAOInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): DAO {
    return new Contract(address, _abi, signerOrProvider) as DAO;
  }
}
